import base64
import pytest
from src.config import Config
from src.sad_account import SadAccountInfo
from solana.publickey import PublicKey

single = {
    'jsonrpc': '2.0',
    'result': {
        'context': {
            'slot': 92250368
        },
        'value': {
            'data': ['ARsAAAABAAAABAAAAERldjELAAAAQSBuZXcgdmFsd
                     'base64'
                     ],
            'executable': False,
            'lamports': 8017920,
            'owner': 'SampGgdt3wioaoMZhC6LTSbg4pnuvQnSfJpDYeuXQBv',
            'rentEpoch': 213
        }
    },
    'id': 1
}


def test_single_result_pass():
    acc_pub_key = PublicKey('5gMsBeLmPkwEKQ1H2AwceAPasXLyZ4tvWGCYR59qf47U')
    owner_pub_key = PublicKey('SampGgdt3wioaoMZhC6LTSbg4pnuvQnSfJpDYeuXQBv')
    in_bytes = base64.urlsafe_b64decode(single['result']['value']['data'][0])
    result = SadAccountInfo.accounts_from(single, acc_pub_key)
    assert result is not None
    assert isinstance(result, list)
    assert len(result) == 1
    assert isinstance(result[0], SadAccountInfo)
    acc = result[0]
    assert acc.account_key == acc_pub_key
    assert acc.owner_key == owner_pub_key
    assert acc.data == in_bytes


multi = {
    'jsonrpc': '2.0',
    'result': [
        {
            'account': {
                'data': ['ARsAAAABAAAABAAAAERldjELAAAAQSBuZXcgdmFsdWUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==',
                         'base64'
                         ],
                'executable': False,
                'lamports': 8017920,
                'owner': 'SampGgdt3wioaoMZhC6LTSbg4pnuvQnSfJpDYeuXQBv',
                'rentEpoch': 213
            },
            'pubkey': '5gMsBeLmPkwEKQ1H2AwceAPasXLyZ4tvWGCYR59qf47U'
        },
        {
            'account': {
                'data': ['AQQAAAAAAAAABAAAAERldjELAAAAQSBuZXcgdmFsd
                         'base64'
                         ],
                'executable': False,
                'lamports': 8017920,
                'owner': 'SampGgdt3wioaoMZhC6LTSbg4pnuvQnSfJpDYeuXQBv',
                'rentEpoch': 213
            },
            'pubkey': 'A94wMjV54C8f8wn7zL8TxNCdNiGoq7XSN7vWGrtd4vwU'
        }
    ], 'id': 1
}


def test_multi_result_pass():
    accounts = [PublicKey('5gMsBeLmPkwEKQ1H2AwceAPasXLyZ4tvWGCYR59qf47U'), PublicKey(
        'A94wMjV54C8f8wn7zL8TxNCdNiGoq7XSN7vWGrtd4vwU')]
    in_bytes = [base64.urlsafe_b64decode(
        multi['result'][0]['account']['data'][0]),
        base64.urlsafe_b64decode(
        multi['result'][1]['account']['data'][0])]
    owner_pub_key = PublicKey('SampGgdt3wioaoMZhC6LTSbg4pnuvQnSfJpDYeuXQBv')
    result = SadAccountInfo.accounts_from(multi)
    assert result is not None
    assert isinstance(result, list)
    assert len(result) == 2
    for i in range(len(accounts)):
        acc = result[i]
        assert acc.account_key == accounts[i]
        assert acc.owner_key == owner_pub_key
        assert acc.data == in_bytes[i]
